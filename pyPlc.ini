
[general]
# mode can be either PevMode to use as car, or EvseMode to use as charger
mode = PevMode

# Simulation without modem
# For development purposes, make it possible to run two instances (pev and evse) on one machine, without
# a modem connected. This feature is not tested since a long time, most likely does not work as intended.
# todo: replace isSimulationMode by this setting
is_simulation_without_modems = false

# The Ethernet interface. Usually eth0 on Raspberry.
# Todo: This setting is considered only on linux. Find a clean solution for windows is to be done. 
eth_interface = eth0

# If a display is connected via serial line, e.g. an WIFI-KIT-32 running the software from https://github.com/uhi22/SerialToOLED
display_via_serial = yes

# LightBulbDemo turns on the relay with a short delay in the charging loop, to stabilize the voltage
# before the resistive load is connected.
light_bulb_demo = yes

# SOC simulation.
# In PevMode, simulate a rising SOC while charging.
soc_simulation = yes

# Device selection for the digital outputs, for CP state and power relays
# Possible options:
#  dieter: Serial controlled device, which controls the digital outputs. E.g. arduino from https://github.com/uhi22/dieter
#  beaglebone: GPIO pins of the beagleBone, as used in https://github.com/jsphuebner/pyPLC/tree/beaglebone
digital_output_device = dieter
#digital_output_device = beaglebone

# Device to read the physically measured inlet voltage in PevMode
# Either the high-voltage dieter from https://github.com/uhi22/dieter, which is connected on serial port.
# Or "none", if no measurement is intended.
#analog_input_device = dieter
analog_input_device = none

# Criteria for ending the PreCharge phase in PevMode
# Possible options:
#  yes: use the EVSEPresentVoltage which is reported by the charger, to decide the end of the precharge
#  no: use the physically measured inlet voltage to decide the end of the precharge
use_evsepresentvoltage_for_precharge_end = yes

# Use the physically measured inlet voltage to show on display during the charge loop.
# If false, we are showing the EVSEPresentVoltage which is reported by the charger.
use_physical_inlet_voltage_during_chargeloop = no

# Voltage threshold for the end-of-precharge decision
# This is the maximum difference voltage between the charger voltage and the accu voltage. If the actual voltage
# difference is lower than this threshold, we will close the power relay, to connect the accu to the charger.
# Unit: volt
u_delta_max_for_end_of_precharge = 10

